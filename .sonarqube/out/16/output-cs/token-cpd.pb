À
yC:\Users\AbrahamLIPACALABILLA\source\repos\Diagnostico\src\Services\Clientes\Clientes.Service.Queries\DTOs\PacienteDto.cs
	namespace 	
Clientes
 
. 
Service 
. 
Queries "
." #
DTOs# '
{ 
public 

class 
PacienteDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Dni 
{ 
get 
;  
set! $
;$ %
}& '
public		 
string		 
Nombres		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
	Apellidos

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
Sexo 
Sexo 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Celular 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
Activo 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ç
}C:\Users\AbrahamLIPACALABILLA\source\repos\Diagnostico\src\Services\Clientes\Clientes.Service.Queries\PacienteQueryService.cs
	namespace 	
Clientes
 
. 
Service 
. 
Queries "
{ 
public 

	interface !
IPacienteQueryService *
{ 
Task 
< 
DataCollection 
< 
PacienteDto '
>' (
>( )
GetAllAsync* 5
(5 6
int6 9
page: >
,> ?
int@ C
takeD H
,H I
IEnumerableJ U
<U V
intV Y
>Y Z
	pacientes[ d
=e f
nullg k
)k l
;l m
Task 
< 
PacienteDto 
> 
GetAsync "
(" #
int# &
id' )
)) *
;* +
} 
public 

class  
PacienteQueryService %
:& '!
IPacienteQueryService( =
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public  
PacienteQueryService #
(# $ 
ApplicationDbContext  
context! (
)( )
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
DataCollection (
<( )
PacienteDto) 4
>4 5
>5 6
GetAllAsync7 B
(B C
intC F
pageG K
,K L
intM P
takeQ U
,U V
IEnumerableW b
<b c
intc f
>f g
	pacientesh q
=r s
nullt x
)x y
{ 	
var 

collection 
= 
await "
_context# +
.+ ,
	Pacientes, 5
.   
Where   
(   
x   
=>   
	pacientes   %
==  & (
null  ) -
||  . 0
	pacientes  1 :
.  : ;
Contains  ; C
(  C D
x  D E
.  E F
Id  F H
)  H I
)  I J
.!! 
OrderBy!! 
(!! 
x!! 
=>!! 
x!! 
.!!  
Nombres!!  '
)!!' (
."" 
GetPagedAsync"" 
("" 
page"" #
,""# $
take""% )
)"") *
;""* +
return$$ 

collection$$ 
.$$ 
MapTo$$ #
<$$# $
DataCollection$$$ 2
<$$2 3
PacienteDto$$3 >
>$$> ?
>$$? @
($$@ A
)$$A B
;$$B C
}%% 	
public'' 
async'' 
Task'' 
<'' 
PacienteDto'' %
>''% &
GetAsync''' /
(''/ 0
int''0 3
id''4 6
)''6 7
{(( 	
try)) 
{** 
return++ 
(++ 
await++ 
_context++ &
.++& '
	Pacientes++' 0
.++0 1
SingleAsync++1 <
(++< =
x++= >
=>++? A
x++B C
.++C D
Id++D F
==++G I
id++J L
)++L M
)++M N
.++N O
MapTo++O T
<++T U
PacienteDto++U `
>++` a
(++a b
)++b c
;++c d
},, 
catch-- 
(-- 
System-- 
.-- %
InvalidOperationException-- 3
)--3 4
{.. 
return// 
null// 
;// 
}00 
}11 	
}22 
}33 